openapi: 3.0.0
info:
  title: IAM
  version: '1.0'
  contact:
    name: Groupe de Fer
    email: info@groupedefer.be
    url: unanimity.be
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  description: Use trash bin fill ratio information within a city to improve a basic citizen service.
servers:
  - url: 'http://localhost:8000'
paths:
  '/api/can/{id}/sync':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      tags:
        - can
      operationId: post-sync-can-id
      responses:
        '200':
          description: OK
        '406':
          description: Not acceptable
      description: 'Upload information concerning the {id} trash can'
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: The id of the trash can
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  type: string
                data:
                  $ref: '#/components/schemas/TrashBinForm'
            examples:
              Example 1:
                value:
                  signature: string
                  data:
                    id: string
                    time: string
                    fillingRate: 0
        description: ''
  /api/cans:
    get:
      summary: Your GET endpoint
      tags:
        - admin
        - can
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                uniqueItems: false
                items:
                  $ref: '#/components/schemas/TrashBin'
              examples:
                Example 1:
                  value:
                    - id: string
                      longitude: 0
                      latitude: 0
                      publicKey: string
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrashBin'
              examples:
                Example 1:
                  value:
                    - id: 5zzd896az2a3d5lferzze5ez8q2s1
                      longitude: 25.26
                      latitude: 12.58
                      publicKey: (...)
      operationId: get-admin-cans
      description: Get all trash can information
    parameters: []
  /api/auth/login:
    post:
      summary: ''
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              examples:
                Example 1:
                  value:
                    token: yboErluqOrjOXZII6x7SXih5VqckV5XW
        '401':
          $ref: '#/components/responses/InvalidIDs'
      description: Request for a long-lived connection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
            examples:
              Example 1:
                value:
                  username: john
                  password: secret
      tags:
        - user
  '/api/admin/can/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ''
      operationId: put-admin-can-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/AccessUnauthorized'
        '404':
          description: Not Found
      description: Update a trash bin
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrashBin'
            examples:
              Example 1:
                value:
                  id: string
                  longitude: 0
                  latitude: 0
                  publicKey: string
      tags:
        - admin
        - can
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: The id of the trash bin
    delete:
      summary: ''
      operationId: delete-admin-can-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/AccessUnauthorized'
        '404':
          description: Not found
      security:
        - bearerAuth: []
      description: Delete an existing trash bin
      tags:
        - admin
        - tag
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: The id of the trash bin
  /api/admin/can:
    post:
      summary: ''
      operationId: post-admin-can
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                Example 1:
                  value:
                    id: string
        '401':
          $ref: '#/components/responses/AccessUnauthorized'
      description: Create a new trash bin
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrashBin'
            examples:
              Example 1:
                value:
                  id: string
                  longitude: 0
                  latitude: 0
                  publicKey: string
      tags:
        - admin
        - can
  '/api/can/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - can
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashBinInfo'
              examples:
                Example 1:
                  value:
                    trashBin:
                      id: string
                      longitude: 0
                      latitude: 0
                      publicKey: string
                    data:
                      - time: string
                        fillingRate: 0
      operationId: get-can-id-info
      description: Get all the available information about one trash bin
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: The id of the trash bin
  /api/auth/logout:
    post:
      summary: ''
      operationId: post-api-auth-logout
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/RefreshUnauthorized'
      description: Request for user disconnection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutCredentials'
            examples:
              Example 1:
                value:
                  username: john
                  token: yboErluqOrjOXZII6x7SXih5VqckV5XW
      tags:
        - user
  /api/auth/refresh:
    post:
      summary: ''
      operationId: post-api-auth-refresh
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationData'
              examples:
                Example 1:
                  value:
                    access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJQU0iLCJzdWIiOiJqb2huIiwiZXhwIjoxNjAzMjA3ODQzLCJuYmYiOjE2MDMyMDc1NDN9.Ux3X1YBOgnlTBdHyxyviMs37ud8nIb1Zt_SLe8Y-dwA
                    refresh: yboErluqOrjOXZII6x7SXih5VqckV5XW
                Example 2:
                  value:
                    access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJQU0iLCJzdWIiOiJqb2huIiwiZXhwIjoxNjAzMjA3ODQzLCJuYmYiOjE2MDMyMDc1NDN9.Ux3X1YBOgnlTBdHyxyviMs37ud8nIb1Zt_SLe8Y-dwA
                    refresh: r7J0W2gsgLVIec9VRUmI6dTgbMLZjdRJ
        '401':
          $ref: '#/components/responses/RefreshUnauthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshCredentials'
            examples:
              Example 1:
                value:
                  username: john
                  token: yboErluqOrjOXZII6x7SXih5VqckV5XW
      tags:
        - user
      description: Request for authorization renewal.
components:
  responses:
    InvalidIDs:
      description: Invalid username/password
    AccessUnauthorized:
      description: Access token is missing or invalid
    RefreshUnauthorized:
      description: Refresh token is missing or invalid
  schemas:
    TrashBin:
      title: TrashBin
      type: object
      description: TrashBin information
      properties:
        id:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        publicKey:
          type: string
      required:
        - id
        - publicKey
    TrashBinForm:
      title: TrashBinData
      type: object
      properties:
        id:
          type: string
        time:
          type: string
        fillingRate:
          type: number
      required:
        - id
        - time
        - fillingRate
    LoginCredentials:
      title: LoginCredentials
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      description: ''
    TrashBinInfo:
      title: TrashBinInfo
      type: object
      properties:
        trashBin:
          $ref: '#/components/schemas/TrashBin'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
    Data:
      title: Data
      type: object
      properties:
        time:
          type: string
        fillingRate:
          type: number
      required:
        - time
        - fillingRate
    LogoutCredentials:
      title: LogoutCredentials
      type: object
      properties:
        username:
          type: string
        token:
          type: string
      required:
        - username
        - token
      description: The user username and current refresh token
    RefreshCredentials:
      title: RefreshCredentials
      type: object
      properties:
        username:
          type: string
        token:
          type: string
      required:
        - username
        - token
      description: The user usersame and current refresh token
    AuthorizationData:
      title: AuthorizationData
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
      required:
        - access
        - refresh
      description: 'The user access token, voucher of his authorization(s) and a possibly renewed refresh token.'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: can
  - name: admin
  - name: user
  - name: tag
